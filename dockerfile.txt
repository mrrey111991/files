# Build stage
FROM docker-pluk-common.pruregistry.intranet.asia:8443/openjdk:21-jdk-slim as build
WORKDIR /app
COPY . .
RUN chmod +x ./pre-build.sh
RUN chmod +x ./gradlew
RUN ./pre-build.sh reset
RUN ./gradlew build --no-daemon
RUN ls -l ./build/libs && echo 1

# Production stage
FROM docker-pluk-common.pruregistry.intranet.asia:8443/tomcat:10.1.44-jdk21

# Environment variables
ENV TOMCAT_HOME=/usr/local/tomcat

# Ensure APT uses HTTPS
RUN sed -i 's|http://|https://|g' /etc/apt/sources.list && \
    find /etc/apt/sources.list.d -type f -exec sed -i 's|http://|https://|g' {} +

# Install dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    gnupg \
    apt-transport-https \
    && rm -rf /var/lib/apt/lists/*

# MSSQL tools
RUN set -eux; \
   mkdir -p /etc/apt/keyrings; \
   curl -fsSL https://packages.microsoft.com/keys/microsoft.asc \
       | gpg --dearmor -o /etc/apt/keyrings/microsoft.gpg; \
   echo "deb [arch=amd64 signed-by=/etc/apt/keyrings/microsoft.gpg] https://packages.microsoft.com/debian/12/prod bookworm main" \
> /etc/apt/sources.list.d/mssql-release.list; \
   apt-get update; \
   ACCEPT_EULA=Y apt-get install -y --no-install-recommends mssql-tools; \
   ln -sf /opt/mssql-tools/bin/sqlcmd /usr/local/bin/sqlcmd; \
   apt-get clean; rm -rf /var/lib/apt/lists/*

# Copy build artifacts from the build stage
COPY --from=build /app/fish-startup.sh $TOMCAT_HOME/bin/fish-startup.sh
COPY --from=build /app/test-api.sh $TOMCAT_HOME/bin/test-api.sh
COPY --from=build /app/run-mssql-scripts.sh $TOMCAT_HOME/bin/run-mssql-scripts.sh
COPY --from=build /app/database/ $TOMCAT_HOME/bin/database/
COPY --from=build /app/tomcat/ $TOMCAT_HOME/conf/
COPY --from=build /app/build/libs/*.war $TOMCAT_HOME/webapps/fish.war

# Prepare Tomcat
RUN mkdir $TOMCAT_HOME/cmd
RUN chmod +x $TOMCAT_HOME/bin/*.sh

# Webapp startup
CMD ["fish-startup.sh"]
EXPOSE 8080
